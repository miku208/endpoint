import axios from "axios";
import { logRequest } from "@/lib/logRequest";
import settings from "@/data/settings.json";

export default async function handler(req, res) {
  const start = Date.now();

  try {
    const { package: packageName } = req.query;

    if (!packageName) {
      const responseTime = Date.now() - start;
      logRequest(req, 400, responseTime);
      return res.status(400).json({ error: "Package name is required" });
    }

    const { data } = await axios.get(
      "https://registry.npmjs.org/" + encodeURIComponent(packageName)
    );

    const versions = data.versions || {};
    const allver = Object.keys(versions);

    if (allver.length === 0) {
      const responseTime = Date.now() - start;
      logRequest(req, 404, responseTime);
      return res
        .status(404)
        .json({ error: "No versions found for this package" });
    }

    const verLatest = allver[allver.length - 1];
    const verPublish = allver[0];
    const packageLatest = versions[verLatest];
    const packageFirst = versions[verPublish];

    const responseTime = Date.now() - start;
    logRequest(req, 200, responseTime);
    return res.status(200).json({
      status: 200,
      creator: "api.denayrestapi.my.id",
      result: {
        name: packageName,
        versionLatest: verLatest,
        versionPublish: verPublish,
        versionUpdate: allver.length,
        latestDependencies: packageLatest.dependencies
          ? Object.keys(packageLatest.dependencies).length
          : 0,
        publishDependencies: packageFirst.dependencies
          ? Object.keys(packageFirst.dependencies).length
          : 0,
        publishTime: data.time.created,
        latestPublishTime: data.time[verLatest],
      },
    });
  } catch (error) {
    const responseTime = Date.now() - start;
    logRequest(req, 500, responseTime);
    const status = error.response?.status || 500;
    return res.status(status).json({
      status: status,
      error:
        status === 404
          ? `Package "${req.query.package}" tidak ditemukan di npm`
          : `Gagal mengambil data npm: ${error.message}`,
    });
  }
}
